// <auto-generated />
using System;
using EkgAnalysisPlatform.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EkgAnalysisPlatform.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250423134145_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("EkgAnalysisPlatform.Core.Models.AnalysisResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AnalyzedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("EkgSignalId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasArrhythmia")
                        .HasColumnType("INTEGER");

                    b.Property<double>("HeartRate")
                        .HasColumnType("REAL");

                    b.Property<double?>("PRInterval")
                        .HasColumnType("REAL");

                    b.Property<double?>("QRSDuration")
                        .HasColumnType("REAL");

                    b.Property<double?>("QTInterval")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("EkgSignalId");

                    b.ToTable("AnalysisResults");
                });

            modelBuilder.Entity("EkgAnalysisPlatform.Core.Models.EkgSignal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataPoints")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("TEXT");

                    b.Property<double>("SamplingRate")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("EkgSignals");
                });

            modelBuilder.Entity("EkgAnalysisPlatform.Core.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("EkgAnalysisPlatform.Core.Models.AnalysisResult", b =>
                {
                    b.HasOne("EkgAnalysisPlatform.Core.Models.EkgSignal", "EkgSignal")
                        .WithMany()
                        .HasForeignKey("EkgSignalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EkgSignal");
                });

            modelBuilder.Entity("EkgAnalysisPlatform.Core.Models.EkgSignal", b =>
                {
                    b.HasOne("EkgAnalysisPlatform.Core.Models.Patient", "Patient")
                        .WithMany("EkgSignals")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("EkgAnalysisPlatform.Core.Models.Patient", b =>
                {
                    b.Navigation("EkgSignals");
                });
#pragma warning restore 612, 618
        }
    }
}
